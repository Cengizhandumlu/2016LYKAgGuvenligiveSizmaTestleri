---Ağ Temelleri---

-OSI Katmanları:
7)Application Layer(Uygulama Katmanı)
6)Presentation ""(Sunum Katmanı)
5)Session ""(Oturum Katmanı)
4)Transportation ""(Taşıma Katmanı)
3)Network ""(Ağ Katmanı)
2)Data/Link ""(Veri Katmanı)
1)Physical ""(Fiziksel Katman)

1-Elektrik akımlarını 1 ve 0 olarak yorumlar.
2-Veriyi nasıl transfer edeceğinizi yorumlayan katman. (MAC)(ARP,RARP)
3-Adresleme işleminin yapıldığı katman. (IP)
4-Paketlerin gönderilip alındığı katman. (TCP/UDP)
5-Bağlantıdaki oturumların takibinin yapıldığı katman.
6-Veri uygulama katmanında kullanıcıya gösterilmeden önce dosyada yapılacak olan format değişikliklerinin yapıldığı katman. (SSL)
7-Verinin en son halinin kullanıcıya gösterildiği katman.

7-6-5 => Uygulama(Application), 4-3-2 => Ağ(Network), 1 => Fiziksel(Physical)

MAC: Kullanılan donanımın adresi. 48bit. AA:BB:CC:DD:EE:FF formatında gösterilir. AA:BB:CC kısmı üretici kimliğinin yer aldığı kısımdır ve unique(eşsiz)dir. DD:EE:FF kısmı ürün kimliğinin yer aldığı kısımdır.

+Ethernet networkleri için Data/Link katmanına denk gelen protokellerin isimleri nedir?
-ARP/RARP. ARP: MAC bilgisi kullanılarak sistemin fiziksel lokasyonunu tespit eden protokol. RARP: Fiziksel konumu bilinen sistemle iletişim kurmayı sağlayan protokol.

Hikaye(ARP): Sınıf içerisinde Mehmet ile ulaşılmak isteniyor. Mehmet kim bilmiyoruz. Ne yaparız? Sınıfa gideriz. Mehmet kim diye bağırırız. Mehmet elini kaldırır ve elini kaldıran kişiyle konuşuruz.
Hikaye(RARP): Sınıfta 3.kümeden 5.sıradaki kişiyle konuşmam gerekiyor. Sınıfa gidip o kişinin kim olduğunu öğrenip o kişiyle konuşuruz.
Hikaye(Mektup): Mektubu adresine teslim edebilmek için 1)Kime yolladığımız 2)Nerede olduğu bilgisine ihtiyacımız var. ARP protokolünde 1 var, bunla 2'yi elde ediyoruz. RARP protokolünde 2 var, bunla 1'i elde ediyoruz.

IP(Internet Protocol): Her bir makinanın kendine ait eşsiz bir adresi olsun diye geliştirilmiş bir protokol.
IPV4: 32bit - IPV6: 128bit 

IPV4: 192.168.1.1 => IIIIIIII.IIIIIIII.IIIIIIII.IIIIIIII (10'luk sistemdeki sayıyı 2'lik sisteme dönüştürmek) Mümkün aralık: 0.0.0.0 - 255.255.255.255

Alt ağ maskesi: 2lik sayı sisteminde belli bir noktanın solu tamamen 1, sağı tamamen 0 yapılır. 10luk sisteme geri döndürüldüğünde elde ettiğimiz sayı alt ağ maskesidir. 1'lenen kısım Network IP'sine, 0'lanan kısım Broadcast IP'sine eşittir.

SORU:
192.168.10.0/24 ip adresinin bir makinaya verilebilmesi için subnet mask ne olmalıdır?

192.168.10.0 => 11000000.10101000.00001010.00000000
Normalde(Subnet mask)                     ^
1 sola kaydırırsak:                      ^           hala network ip'sidir makinaya verilemez.
2 sola kaydırırsak:                     ^            sağ tarafta bir tane 1 olduğu için artık bu ip'yi bir makinaya verebiliriz.

192.168.10.255/24 IP'sini bir makinaya verebilmek için ise bir kere sola kaydırmak yeterli.

---RFC 1918

-Public (internet) unique
-Private (Public içerisindeki yerel ağdaki makinalara verilen IP, diğer private ağlarda da aynı ip kullanılabilir. unique değildir.)

-Private'deki bir makina internete erişmek istediğinde public'e dönüşmesi gerekir. Bu işlem NAT ile gerçekleşir.

-Şu adresler private olarak kullanılmak üzere ayrılmıştır:

10.0.0.0        -   10.255.255.255  (10/8 prefix)
172.16.0.0      -   172.31.255.255  (172.16/12 prefix)
192.168.0.0     -   192.168.255.255 (192.168/16 prefix)

-Yani eğer birisi 172.18 ip adresinden saldırı alıyorum diyorsa, ya yerel ağdan saldırı geliyordur, ya da ip adresi değiştirilmiştir.

-IPv4 havuzunu kendi içinde class'lara bölmüşler:
-A, B, C, D(multicast için reserve), E(komple reserve)

-Multicast: grup mesajı
-Unicast: birebir mesaj
-Broadcast: toplu mesaj (whatsapp örneği)

-127.0.0.0/8 => hem public hem private olarak kullanılmayan bir grup:
-Bir network olmasa dahi makinelerin birbirlerine bağlanabilmesi için ayrılmış grup.

-169.254.0.0/16 (Apipa) => hem public hem private olarak kullanılmayan bir grup:
-IP adresi manuel veya otomatik olarak verilmeyen makineler için ayrılmış grup. Bu gruptan IP'yi almadan önce o ağda broadcast yapar ve eğer o IP alınmamışsa kendisine reserve eder.

---Transport Katmanı:
-Bu katmandaki protokoller: TCP/UDP/ICMP

-ICMP (Internet Control Message Protocol): TCP/IP'nin düzgün çalışıp çalışmadığını kontrol eden protokoldür. 
Örnek: ICMP echo request, echo reply (ping atmak). Karşı tarafın ayakta olup olmadığını öğrenmek. 

---IP Header: Genişliği 32bit'tir. Kendi içerisinde bölümlere ayrılarak belli bir standarta oturulmuştur.

-Version: (4bit) Gelen paketin IPv4 veya IPv6 olduğunun yorumlandığı kısım.
-IHL: (4bit) Yollanan pakete nasıl davranılacağını bildiren kısım. Acil mi veya bekleyecek mi vs.
-Total Length: (16bit) 2^16 = 65535byte (Maksimum Toplam Uzunluk) Paketin uzunluk bilgisinin olduğu kısımdır.

-Identification: (16bit) Kimlik bilgisi olarak eklenilen kısım. Host tarafından random oluşturulur.

-Flags: (3bits) Yollanan IP paketinin sağlıklı bir şekilde geçirilip geçirilmemesi için yeri geldiğinde parçalanıp parçalanmaması hakkında bilgi veren kısımdır.

-Fragment Offset: (13bits) Paket parçalandıysa parça sırasını belirten kısım.

-Time to Live: (8bit) Pakete verilen yaşam süresi. Eğer paket sonsuz döngüye girerse paketin kendini yok etmesi için verilen zamanı belirten kısım. (Kaç kere, saniye vs. değil)

-Header Checksum: (16bit) Paketteki bilgiler bir fonksiyona sokulup elde edilen değer burada belirtilir. Paketi alan kişi buradaki bilgiyi alır ve paketi fonksiyona sokup tekrar aynı değeri alıp almadığını kontrol ederek paketin bozulup bozulmadığını anlar. 

-Source IP Address: (32bit) Paketi gönderenin ip adresi.

-Destination IP Address: (32bit) Paketi alacak makinenin ip adresi.

---ICMP Header

-Type: switch-case deki gibi farklı tipler var, bunların belirtildiği kısım.

-Code:

-Checksum: ip headers ile aynı.

---Wireshark: OSI katmanlarındaki veri 2.katmandan direk wiresharka yönlendirilerek veriyi katmanlardan geçmeden önce izlemeyi sağlayan program. Bu sayede gönderdiğimiz ve aldığımız paketleri detaylıca gözlemleyebiliyoruz.

->Ethernet / Layer 2 => IP / Layer 3 => ICMP 

---Scapy

ls() => desteklenen protokolleri listeleyen metod
ls(protokol) => @protokol: desteklenen protokol listesinden herhangi bir protokol
send() => paket gönderme metodu

-Kullandığımız kodlar

ip_header=IP(ttl=10, dst="127.0.0.11", src="127.14.11.1")
icmp_header=ICMP(type=8, code=0)
paket=ip_header/icmp_header
send(paket)

---

ether_header=Ether(src="00:00:00:00:00:00", dst="00:00:00:00:00:00")
paket=ether_header/ip_header/icmp_header
sendp(paket)

Not: Eğer layer 3 paket gönderilecekse send metodu kullanılması gerek. eğer layer 2 paket gönderilecekse sendp metodu kullanılır.

---TCP: (3way handshake) Bir bilgisayarla haberleşmek istediğiniz zaman bu haberleşme isteğini karşı tarafa bildirilip karşı taraftan da onay alırsa iletişimin kurulduğu ve bu iletişimin sonlandırılana kadar geçer zaman içerisinde herhang bir kayıp veya sorun yaşanmamasını garanti etmeye çalışan protokoldür.

---Port: Bir makinenin üzerinde kendinden başka makinelerin ulaşabilmesi için açılan bir kapı olarak düşünülebilir. Birden fazla servise erişmek için bu kapılardan hangisi uygunsa oradan girip ordan konuşmaya sağlayan açık kapılardır. Kaç port vardır? 2^16 (Source-Port 16bit olduğu için)

-Sequence Number ve Acknowledgment Number: (32bit) 3way handshake esnasında iletişim kurarken hangi mesajlara cevap verildiğini takip etmek için kullanılan sayılar. cevap +1 yapılarak ve yeni bir sayı verilerek geri yollanır. yeni sayı sequence number'a eklenir. +1 yapılan sayı ancknowledgment number kısmına eklenir.

-Header Length: (4bit) tcp header'in uzunluğunun belirtildiği kısım.

-Code Bits: (6bit) gönderilen paketlerin cinsini belirttiğimiz kısım. örnek (istek yollama paketi, cevap paketi, acil vs.)

-Window Size: (16bit) makinelerin karşı tarafa kapasitesini belirtmek için kullandıkları kısım.

A => syn + x(sequence) 
B => syn + ack(x+1) + y(sequence)
A => ack(y+1) + z(sequence)

nc 127.0.0.1 22 -v

-scapy üzerinden örnek:

tcp=TCP(sport=8080, dport=22, flags="S")
ip3=IP(src="127.0.0.1",dst="127.0.0.1")
paket3=ip3/tcp
send(paket3)

+Açık olan bir tcp portuna açık bir servisin koştuğu porta syn paketi yollarsak synack cevabı alırız. peki açık olan bir porta ack paketi yollarsak ne olur?
-Reset döner. Düzgün başlatmadığınızda veya herhangi bir problemle karşılaşıldığında o protokol sonlandırılır.

+Kapalı bir porta syn yollarsak ne olur?
-Reset döner. Reset'in ne için döndüğünü(port başından beri mi kapalı yoksa bize mi kapatıldı(?)), hangi aşamada reset döndüğünü gözlemleyerek anlayabiliriz.

+Port kesin açık. Güvenlik duvarı var. Syn gönderdik. Ne olur?
-Belli olmaz. Reset dönebilir. Cevap dönmeyebilir.

+Port açık mı kapalı mı bilmiyoruz. Syn gönderdik. Cevap gelmedi? Ne oldu?
-Kesin olan şey: firewall.

+Arada firewall var. Ack paketi gönderiyoruz. Reset dönüyor. Firewall'dan mı yoksa host'tan mı reset dönmüştür?
-Bir de Syn paketi yollayarak anlaşılabilir. Eğer tekrar Reset dönüyorsa firewall'dan dönüyor demektir.

---UDP

-TCP'den farklı olarak dosyanın ulaşıp ulaşmadığını kontrol etmez. Daha hızlıdır. (shoot and forget) TCP'de veri 4.pakette yollanmaya başlanırken UDP'de veri 1.paketten itibaren yollanır. Yani UDP TCP'den 4 kat daha hızlıdır.

-UDP, açık olan portu ve servisi bilip bunlara paket yolladığınızda, ancak o zaman cevap alacağınız bir protokoldür. Eğer buna rağmen cevap gelmiyorsa 2 ihtimal vardır. Ya servis yolladığınız paketi anlamadı, ya da arada firewall var.

-UDP ile veri yolladığımız port kapalıysa ve firewall yoksa; ICMP port kapalı mesajı döndürür.

---DNS

-Domainlerin eşleşen IP'lerini bulmamızı sağlayan sunuculardır. Eğer DNS sunucusu, sorduğumuz domain'in IP'sine sahip değilse, içerisinde statik olarak kazılı olan ROOT DNS sunucularına sorar. DNS IP'yi elde ettiğinde bir daha aramamak için IP adresini cache içerisinde istediği domainden sorumlu sunucunun belirlediği süre boyunca saklar.

-Bu kısım 3.gün öğle dersinde eklendi-

-DNS Kayıt Türleri: Ağ, mx, cname, ns, Ptr, SOA, txt

-Ağ kaydı: istenilen domain'in IP adresini kaydeder.

-mx kaydı: her dns sunucusu bir ya da birden fazla zone(alan)'dan sorumludur. o alan adından sorumlu mail sunucuların bulunduğu kayıt.

-cname kaydı: alias. ağ kayıtlarına işaret eden takma ad.

-ns kaydı:

-Ptr kaydı: ip adresi verip domain sorduğumuzda geri dönen kayıt türü.

-SOA kaydı: zone'un kendisine dair ve master dns sunucusuna dair bilgilerin bulunduğu kayıt.

-txt kaydı: opsiyonel olarak bilgi tutulmak istendiğinde kullanılan kayıtlar.

-Örnekler:

=> dig www.linux.org.tr veya dig www.linux.org.tr A (önceden benim dns sunucum olarak kaydedilen kişi kimse ona sorgu gidecek)

-ns kaydı sormak için:
=> dig linux.org.tr NS (www'ları çıkarma sebebimiz host'tan sorumlu ns kaydının olmaması)

-SOA kaydı için:
=> dig linux.org.tr SOA

-otoritelere sormak:

=> dig www.linux.org.tr @frig.linux.org.tr
=> dig www.linux.org.tr @8.8.8.8

=> dig -x 139.179.139.181 (ip adresi sorup domain elde etmek(reverse))

=> dig linux.org.tr any (ne bulursan getir)

-IP adresine sahip olduğumuz adresin domainini bulabilmek için de DNS servisini kullanabiliriz.

---DHCP (Dynamic Host Control Protocol): 

-Makineye IP, Gateway, DNS, NetMask, Proxy verilebilir. 

-Lease Time: (Kira süresi) Makinelere verilen IP sürelerinin son kullanma tarihi.

-Eğer DHCP'deki IP havuzları dolduysa, boşa çıkan IP olmadığı sürece yanıt vermez. Makine kendisine apipas sınıfındaki reserve edilmiş IP'lerden bir IP alır.

-Eğer havuzu dolmuş bir DHCP yanına ikinci bir DHCP kurarsak istek gönderen client'ler bize yönlenir ve kontrol edebiliriz.

-MAC adresi değiştirildiğinde DHCP bize yeni bir IP verir. Çünkü bizi MAC adresimizden tanır. Eğer kira süresi yeterince yüksekse, bu işlem yeterince tekrar edilerek DHCP sunucusunun havuzu doldurulabilir.

-Eğer birden fazla DHCP sunucusu varsa, en önce yanıt verene gidilir. Saldırgan kendi DHCP sunucusunu kurarak bilgileri manipüle edebilir.

---Router

-Ağa bağlanabilme kapasitesi olan makinelerin ilgili ağlara yönlendirmesini yapan makinedir.

-Gateway: kargo firmaları örneği. Nasıl gideceğinizi bilmediğiniz yerlere verilerinizi gönderebilmeniz için aracılık yapan router'lara gateway denir.

tcpdump = emektar wireshark

---ETÜT: scapy ile

-dns isteği oluşturup dns sunucusuna yollayıp wireshark ile izle.
-dhcp isteği oluşturup dhcp servisine gönder. eduroam'a yollayabiliriz.


-dns paketi

ip=IP(dest="8.8.8.8")
udp=UDP(dport=53)
dns=DNS(rd=1,qd=DNSQR(qname="www.facebook.com"))
dns_pack=ip/udp/dns
send(dns_pack)

-dhcp paketi

ip_d=IP(src="0.0.0.0", dst="255.255.255.255")
udp_d=UDP(sport=68, dport=67)
dhcp=DHCP(options=[("lease_time", 70000)])
dhcp_pack=ip_d/udp_d/dhcp
send(dhcp_pack)
