---09-08-2016(4.gün)

---DNS üzerinden bilgi toplama:
-DNS eğer bilmeyip bilgiyi başka dns sunucularından getirmeye çalışıyorsa buna recursive denir. DNS sunucusuna recursive olmayan sorgular gönderdiğimizde DNS sunucusunun cache'inde bu bilgi varsa geri döner, yoksa cevap gelmez. Bu sayede o DNS sunucusunda istediğimiz bilginin daha önce istenip istenmediğini öğrenebiliriz. Yani birisi bulmak istediğimiz siteye daha önce girmiş mi sorusunun cevabını alabiliriz.

-cache bilgileri sonsuza kadar saklamaz. belli bir süre sonra DNS sunucusu bilgileri kendisi tekrar almak için gider. bunun bilgisine de şuradan ulaşılabilir:

=> dig www.ibu.edu.tr 
= www.ibu.edu.tr.	///saniye (6673)	IN	A	194.27.225.124

-scapy ile çalışırken DNS(rd=1) değerini rd=0 ile değiştirirsek paket non-recursive olur.
-dig için recurse parametresi ile bu ayar yapılabilir.

-DNS üzerinden toplanabilecek bilgiler:
SOA kaydına bakılarak e-mail adresi alınabilir.
Zone Transfer yapılabilir.
Brute Force yapılabilir.

-SOA kaydı sorgulama:
=> nslookup -type=SOA ibu.edu.tr || dig SOA ibu.edu.tr

-DNS sunucusunu öğrenme:
=> nslookup -type=NS ibu.edu.tr || dig NS ibu.edu.tr

-Eğer istediğimiz bir DNS'ten sorgulatmak istiyorsak bunu da ayrıyetten belirtmemiz gerekiyor => server 8.8.8.8

-fierce default wordlist => /usr/share/fierce/hosts.txt

///scapy ödevi

-Hazır Örnek: 
answer=sr1(IP(dst="8.8.8.8")/UDP(dport=53)/DNS(rd=1,qd=DNSQR(qname="www.thepacketgeek.com")),verbose=0)

-Deneme:
subdegisken=["obs", "demo", "login"]
for i in subdegisken:
	send(IP(dst="8.8.8.8")/UDP(dport=53)/DNS(rd=1,qd=DNSQR(qname="www."+subdegisken[i]+"trakya.edu.tr"))



-Çözüm:
=> python
=> from scapy.all import *
=> for i in open(*/tmp/sozluk.txt"):
=> 	answer=sr1(IP(dst="8.8.8.8")/UDP(dport=53)/DNS(rd=1,qd=DNSQR(qname=i.rstrip('\n')+".ibu.edu.tr")),verbose=0)
	answer[DNS].an
	-enter-
	-enter-

---Zone Transfer:
-ilk etapta yapmamız gereken şey hedefle ilgili sorumlu dns sunucularını bulmak

-bu yöntem maksimum kapsamı tespit edebilmek için kullanılır.

=> dig ns ibu.edu.tr
=> dig axfr ns2.ibu.edu.tr @ibu.edu.tr (başarılı olana kadar bütün dns sunucularını dene)

-çalışan örnek

=> dig zonetransfer.me NS
=> dig axfr nsztm2.digi.ninja @zonetransfer.me (dns2)
=> dig axfr nsztm1.digi.ninja @zonetransfer.me (dns1)

---Mola 1.5saat

---Mail üzerinden bilgi toplama:

-Mail header arasından bilgi toplanabilir. Bir e-mail grubuna e-mail yollandığında eğer o gruptan mail'i alamayacak bir kişi varsa, e-mail servisi bize bu kişinin yolladığımız e-maili alamayacağının bilgisini verirken kişiyi ifşa etmiş oluruz. 

-Kaynak header'e ulaşmak => gmail'e gir. mail'i aç. sağ üstteki reply'ın yanındaki oka bas. Show original'i seç.

-Kaynak header'in analizi için => http://mxtoolbox.com/EmailHeaders.aspx

-Örnek:
=> dig ns barkin.info (dns sunucusunu öğreniyoruz)
=> dig ns barkin.info @ns1.cloudns.net (e-posta'yı öğreniyoruz)
=> nc eposta.kilic.xyz 25 -v

-ehlo localhost (valar morghulis)

---21:15

---nmap'in 2 özelliği daha var:

-1 tarama yapma esnasında tarayan kişi kendisini gizleyebilmek için kullanılabilecek yöntemler:

---1a: Decoy Scan: sahte IP'lerden paket üreterek kalabalık yaratıyorsunuz. kalabalığın arasına 1 ya da 2 kendi IP'mizi ekleyince bizim yolladığımız paketler göze batmayacak şekilde kalıyor. 

---1b: IDLE Scan: gerekenler: saldırgan, hedef, kurban(zombi). uygulayabilmek için 2 şart var. bir: bulacağınız kurbanın network trafiğinin az olması lazım. güzel kurbanlar: boşta olan makineleler. iki:  

-hikaye: kurbana paket gönderilir. kurban geri cevap verir. kurbana bu sefer hedeften gidiyormuş gibi bir paket daha gönderilir. kurban geri cevabını hedefe döner. hedefte kurbana eğer port kapalı veya arada firewall varsa reset+ack döner. bu sefer kendimizden kurbana paket yollarız (x+1). bize cevabı döner. Bu sayede hedef portun kapalı olup olmadığını veya arada firewall olup olmadığını öğrenebilme imkanımız olabilir. Bize dönen cevap x+1 ise port kapalı/firewall, x+2 ise port açık demektir.

****************************************************************************
